{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\Project-3-TravelBug\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Container from \"./components/Container\";\nimport getLocationId from \"./utils/api/LocationSearch\";\nimport getRestaurants from \"./utils/api/RestaurantSearch\";\nimport getAttractions from \"./utils/api/Attractions\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { loadErrorMessages, loadDevMessages } from \"@apollo/client/dev\";\n\n// Adds messages only in a dev environment\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nloadDevMessages();\nloadErrorMessages();\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache()\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 2\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Container","getLocationId","getRestaurants","getAttractions","ApolloClient","ApolloProvider","InMemoryCache","loadErrorMessages","loadDevMessages","jsxDEV","_jsxDEV","client","uri","cache","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/GitHub/Project-3-TravelBug/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Container from \"./components/Container\";\nimport getLocationId from \"./utils/api/LocationSearch\";\nimport getRestaurants from \"./utils/api/RestaurantSearch\";\nimport getAttractions from \"./utils/api/Attractions\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { loadErrorMessages, loadDevMessages } from \"@apollo/client/dev\";\n\n // Adds messages only in a dev environment\n  loadDevMessages();\n  loadErrorMessages();\n\n  const client = new ApolloClient({\n    uri: '/graphql',\n    cache: new InMemoryCache(),\n  });\n\nfunction App() {\n    return (\n <ApolloProvider client={client}>\n    <Container></Container>\n     </ApolloProvider>\n    )\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,YAAY,EAAEC,cAAc,EAAEC,aAAa,QAAQ,gBAAgB;AAC5E,SAASC,iBAAiB,EAAEC,eAAe,QAAQ,oBAAoB;;AAEtE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACCF,eAAe,CAAC,CAAC;AACjBD,iBAAiB,CAAC,CAAC;AAEnB,MAAMI,MAAM,GAAG,IAAIP,YAAY,CAAC;EAC9BQ,GAAG,EAAE,UAAU;EACfC,KAAK,EAAE,IAAIP,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEJ,SAASQ,GAAGA,CAAA,EAAG;EACX,oBACHJ,OAAA,CAACL,cAAc;IAACM,MAAM,EAAEA,MAAO;IAAAI,QAAA,eAC5BL,OAAA,CAACV,SAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEtB;AAACC,EAAA,GANQN,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}