{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epine\\\\bootcamp\\\\TravelBug\\\\Project-3-TravelBug\\\\client\\\\src\\\\components\\\\Container.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NavTabs from './Navtabs';\nimport Home from './pages/Home';\nimport PlacesToGo from './pages/PlacesToGo';\nimport getLocationId from '../utils/api/LocationSearch';\n// import Restaurants  from './pages/Restaurants ';\nimport Attractions from './pages/Attractions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Container() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('Home');\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === 'Home') {\n      return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === 'Attractions') {\n      return /*#__PURE__*/_jsxDEV(Attractions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === 'PlacesToGo') {\n      return /*#__PURE__*/_jsxDEV(PlacesToGo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    }\n    // if (currentPage === 'Restaurants ') {\n    //     return <Restaurants  />;\n    // }\n  };\n\n  const handlePageChange = page => setCurrentPage(page);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavTabs, {\n      currentPage: currentPage,\n      handlePageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), renderPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Container, \"vcoaMTDHSZfl5rAUZU9BPC9/EwA=\");\n_c = Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","NavTabs","Home","PlacesToGo","getLocationId","Attractions","jsxDEV","_jsxDEV","Container","_s","currentPage","setCurrentPage","renderPage","fileName","_jsxFileName","lineNumber","columnNumber","handlePageChange","page","children","_c","$RefreshReg$"],"sources":["C:/Users/epine/bootcamp/TravelBug/Project-3-TravelBug/client/src/components/Container.js"],"sourcesContent":["import React, { useState } from 'react';\nimport NavTabs from './Navtabs';\nimport Home from './pages/Home';\nimport PlacesToGo from './pages/PlacesToGo';\nimport getLocationId from '../utils/api/LocationSearch';\n// import Restaurants  from './pages/Restaurants ';\nimport Attractions from './pages/Attractions';\n\nexport default function Container() {\n  const [currentPage, setCurrentPage] = useState('Home');\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === 'Home') {\n      return <Home />;\n    }\n    if (currentPage === 'Attractions') {\n      return <Attractions />;\n    }\n    if (currentPage === 'PlacesToGo') {\n      return <PlacesToGo />;\n    }\n    // if (currentPage === 'Restaurants ') {\n    //     return <Restaurants  />;\n    // }\n  };\n\n  const handlePageChange = (page) => setCurrentPage(page);\n\n  return (\n    <div>\n      {/* We are passing the currentPage from state and the function to update it */}\n      <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\n      {renderPage()}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,aAAa,MAAM,6BAA6B;AACvD;AACA,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;;EAEtD;EACA,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,WAAW,KAAK,MAAM,EAAE;MAC1B,oBAAOH,OAAA,CAACL,IAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACjB;IACA,IAAIN,WAAW,KAAK,aAAa,EAAE;MACjC,oBAAOH,OAAA,CAACF,WAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACxB;IACA,IAAIN,WAAW,KAAK,YAAY,EAAE;MAChC,oBAAOH,OAAA,CAACJ,UAAU;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACvB;IACA;IACA;IACA;EACF,CAAC;;EAED,MAAMC,gBAAgB,GAAIC,IAAI,IAAKP,cAAc,CAACO,IAAI,CAAC;EAEvD,oBACEX,OAAA;IAAAY,QAAA,gBAEEZ,OAAA,CAACN,OAAO;MAACS,WAAW,EAAEA,WAAY;MAACO,gBAAgB,EAAEA;IAAiB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACxEJ,UAAU,CAAC,CAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACP,EAAA,CA5BuBD,SAAS;AAAAY,EAAA,GAATZ,SAAS;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}