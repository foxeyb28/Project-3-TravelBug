{"ast":null,"code":"const searchLocation = 'Chicago';\nconst getLocationId = async searchLocation => {\n  const locationSearchUrl = `https://travel-advisor.p.rapidapi.com/locations/search?query=${searchLocation}&limit=30&offset=0&units=km&currency=USD&sort=relevance&lang=en_US`;\n  const locationSearchOptions = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': '62efcc3a35mshdaeb040dd328b4ap178502jsnd47fc21e5388',\n      'X-RapidAPI-Host': 'travel-advisor.p.rapidapi.com'\n    }\n  };\n  try {\n    const locationResponse = await fetch(locationSearchUrl, locationSearchOptions);\n    const locationResult = await locationResponse.json();\n    console.log(locationResult);\n    if (locationResult.data && locationResult.data.length > 0) {\n      return locationResult.data[0].result_object.location_id;\n    } else {\n      // throw new Error('No data results found for the given location.');\n      retun;\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport default getLocationId;","map":{"version":3,"names":["searchLocation","getLocationId","locationSearchUrl","locationSearchOptions","method","headers","locationResponse","fetch","locationResult","json","console","log","data","length","result_object","location_id","retun","error"],"sources":["C:/Users/epine/bootcamp/TravelBug/Project-3-TravelBug/client/src/utils/api/LocationSearch.js"],"sourcesContent":["const searchLocation = 'Chicago';\r\n\r\nconst getLocationId = async (searchLocation) => {\r\n  const locationSearchUrl = `https://travel-advisor.p.rapidapi.com/locations/search?query=${searchLocation}&limit=30&offset=0&units=km&currency=USD&sort=relevance&lang=en_US`;\r\n\r\n  const locationSearchOptions = {\r\n    method: 'GET',\r\n    headers: {\r\n      'X-RapidAPI-Key': '62efcc3a35mshdaeb040dd328b4ap178502jsnd47fc21e5388',\r\n      'X-RapidAPI-Host': 'travel-advisor.p.rapidapi.com'\r\n    }\r\n  };\r\n\r\n  try {\r\n    const locationResponse = await fetch(locationSearchUrl, locationSearchOptions);\r\n    const locationResult = await locationResponse.json();\r\n    console.log(locationResult)\r\n    if (locationResult.data && locationResult.data.length > 0) {\r\n      return locationResult.data[0].result_object.location_id;\r\n    } else {\r\n      // throw new Error('No data results found for the given location.');\r\n      retun \r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default getLocationId;"],"mappings":"AAAA,MAAMA,cAAc,GAAG,SAAS;AAEhC,MAAMC,aAAa,GAAG,MAAOD,cAAc,IAAK;EAC9C,MAAME,iBAAiB,GAAI,gEAA+DF,cAAe,oEAAmE;EAE5K,MAAMG,qBAAqB,GAAG;IAC5BC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE;IACrB;EACF,CAAC;EAED,IAAI;IACF,MAAMC,gBAAgB,GAAG,MAAMC,KAAK,CAACL,iBAAiB,EAAEC,qBAAqB,CAAC;IAC9E,MAAMK,cAAc,GAAG,MAAMF,gBAAgB,CAACG,IAAI,CAAC,CAAC;IACpDC,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;IAC3B,IAAIA,cAAc,CAACI,IAAI,IAAIJ,cAAc,CAACI,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MACzD,OAAOL,cAAc,CAACI,IAAI,CAAC,CAAC,CAAC,CAACE,aAAa,CAACC,WAAW;IACzD,CAAC,MAAM;MACL;MACAC,KAAK;IACP;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAehB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}