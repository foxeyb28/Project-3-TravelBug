{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epine\\\\bootcamp\\\\TravelBug\\\\Project-3-TravelBug\\\\client\\\\src\\\\components\\\\Container.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NavTabs from './Navtabs';\nimport Home from './pages/Home';\nimport PlacesToGo from './pages/PlacesToGo';\nimport getLocationId from '../utils/api/LocationSearch';\nimport getRestaurants from '../utils/api/RestaurantSearch';\nimport getAttractions from '../utils/api/Attractions';\nimport Restaurants from './pages/Restaurants';\nimport Attractions from './pages/Attractions';\nimport MainComponent from './MainComponent';\nimport SignUpForm from './SignUpForm';\nimport LoginForm from './LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Container() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('Home');\n  const [locationId, setLocationId] = useState('');\n  const [restaurant, setRestaurant] = useState([]);\n  const [attractions, setAttractions] = useState([]);\n  const [cityName, setCityName] = useState('');\n  useEffect(() => {\n    getLocationId().then(data => {\n      setLocationId(data);\n      getRestaurants(data).then(restaurantData => {\n        setRestaurant(restaurantData); // Store restaurants data in state.\n      });\n\n      getAttractions(data).then(attractionsData => {\n        setAttractions(attractionsData); // Store attractions data in state.\n      });\n    }, []);\n  });\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCityName(value);\n  };\n  const handleSearch = event => {\n    getLocationId(cityName).then(data => {\n      setLocationId(data);\n      getRestaurants(data).then(restaurantData => {\n        setRestaurant(restaurantData);\n      });\n    });\n  };\n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === 'Home') {\n      return /*#__PURE__*/_jsxDEV(Home, {\n        handleChange: handleChange,\n        handleSearch: handleSearch,\n        cityName: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === 'Attractions') {\n      return /*#__PURE__*/_jsxDEV(Attractions, {\n        attractionsData: attractions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === 'Restaurants') {\n      return /*#__PURE__*/_jsxDEV(Restaurants, {\n        restaurantData: restaurant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === 'SignUp') {\n      return /*#__PURE__*/_jsxDEV(SignUpForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const handlePageChange = page => setCurrentPage(page);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(restaurant), /*#__PURE__*/_jsxDEV(NavTabs, {\n      currentPage: currentPage,\n      handlePageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), renderPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Container, \"vUANvuQrEEwNO7sk5iOrf5WE2dM=\");\n_c = Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","NavTabs","Home","PlacesToGo","getLocationId","getRestaurants","getAttractions","Restaurants","Attractions","MainComponent","SignUpForm","LoginForm","jsxDEV","_jsxDEV","Container","_s","currentPage","setCurrentPage","locationId","setLocationId","restaurant","setRestaurant","attractions","setAttractions","cityName","setCityName","then","data","restaurantData","attractionsData","handleChange","event","name","value","target","handleSearch","renderPage","fileName","_jsxFileName","lineNumber","columnNumber","handlePageChange","page","children","console","log","_c","$RefreshReg$"],"sources":["C:/Users/epine/bootcamp/TravelBug/Project-3-TravelBug/client/src/components/Container.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NavTabs from './Navtabs';\nimport Home from './pages/Home';\nimport PlacesToGo from './pages/PlacesToGo';\nimport getLocationId from '../utils/api/LocationSearch';\nimport getRestaurants from '../utils/api/RestaurantSearch';\nimport getAttractions from '../utils/api/Attractions';\nimport Restaurants  from './pages/Restaurants';\nimport Attractions from './pages/Attractions';\nimport MainComponent from './MainComponent';\nimport SignUpForm from './SignUpForm';\nimport LoginForm from './LoginForm';\n\nexport default function Container() {\n  const [currentPage, setCurrentPage] = useState('Home');\n  const [locationId, setLocationId] = useState('');\n  const [restaurant, setRestaurant] = useState([]);\n  const [attractions, setAttractions] = useState([]);\n  const [cityName, setCityName] = useState('');\n\n  useEffect(() => {\n    getLocationId().then((data) => {\n      setLocationId(data);\n      getRestaurants(data).then((restaurantData) => {\n        setRestaurant(restaurantData); // Store restaurants data in state.\n      });\n\n    getAttractions(data).then((attractionsData) => {\n        setAttractions(attractionsData); // Store attractions data in state.\n      });\n    }, []);\n  });\n  const handleChange = (event) => {\n    const {name, value} = event.target\n    setCityName(value)\n  }\n  const handleSearch = (event) => {\n    getLocationId(cityName).then(data=>{\n      setLocationId(data)\n      getRestaurants(data).then(restaurantData=>{\n        setRestaurant(restaurantData)\n      })\n    })\n  }; \n\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n   const renderPage = () => {\n    if (currentPage === 'Home') {\n      return <Home handleChange={handleChange} handleSearch={handleSearch} cityName={cityName} />;\n    }\n    if (currentPage === 'Attractions') {\n      return <Attractions attractionsData={attractions} />;\n    }\n    if (currentPage === 'Restaurants') {\n      return <Restaurants restaurantData={restaurant} />;\n    }\n    if (currentPage === 'SignUp') {\n      return <SignUpForm />;\n    }\n    \n  };\n\n  const handlePageChange = (page) => setCurrentPage(page);\n  return (\n    <div>\n      {console.log(restaurant)}\n      <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\n      {/* <MainComponent currentPage={currentPage} setCurrentPage={setCurrentPage} /> */}\n      {renderPage()}\n    </div>\n);\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,cAAc,MAAM,+BAA+B;AAC1D,OAAOC,cAAc,MAAM,0BAA0B;AACrD,OAAOC,WAAW,MAAO,qBAAqB;AAC9C,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdI,aAAa,CAAC,CAAC,CAACsB,IAAI,CAAEC,IAAI,IAAK;MAC7BR,aAAa,CAACQ,IAAI,CAAC;MACnBtB,cAAc,CAACsB,IAAI,CAAC,CAACD,IAAI,CAAEE,cAAc,IAAK;QAC5CP,aAAa,CAACO,cAAc,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC;;MAEJtB,cAAc,CAACqB,IAAI,CAAC,CAACD,IAAI,CAAEG,eAAe,IAAK;QAC3CN,cAAc,CAACM,eAAe,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC;EACR,CAAC,CAAC;EACF,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAACC,IAAI;MAAEC;IAAK,CAAC,GAAGF,KAAK,CAACG,MAAM;IAClCT,WAAW,CAACQ,KAAK,CAAC;EACpB,CAAC;EACD,MAAME,YAAY,GAAIJ,KAAK,IAAK;IAC9B3B,aAAa,CAACoB,QAAQ,CAAC,CAACE,IAAI,CAACC,IAAI,IAAE;MACjCR,aAAa,CAACQ,IAAI,CAAC;MACnBtB,cAAc,CAACsB,IAAI,CAAC,CAACD,IAAI,CAACE,cAAc,IAAE;QACxCP,aAAa,CAACO,cAAc,CAAC;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;;EAED;EACC,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACxB,IAAIpB,WAAW,KAAK,MAAM,EAAE;MAC1B,oBAAOH,OAAA,CAACX,IAAI;QAAC4B,YAAY,EAAEA,YAAa;QAACK,YAAY,EAAEA,YAAa;QAACX,QAAQ,EAAEA;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC7F;IACA,IAAIxB,WAAW,KAAK,aAAa,EAAE;MACjC,oBAAOH,OAAA,CAACL,WAAW;QAACqB,eAAe,EAAEP;MAAY;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACtD;IACA,IAAIxB,WAAW,KAAK,aAAa,EAAE;MACjC,oBAAOH,OAAA,CAACN,WAAW;QAACqB,cAAc,EAAER;MAAW;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpD;IACA,IAAIxB,WAAW,KAAK,QAAQ,EAAE;MAC5B,oBAAOH,OAAA,CAACH,UAAU;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACvB;EAEF,CAAC;EAED,MAAMC,gBAAgB,GAAIC,IAAI,IAAKzB,cAAc,CAACyB,IAAI,CAAC;EACvD,oBACE7B,OAAA;IAAA8B,QAAA,GACGC,OAAO,CAACC,GAAG,CAACzB,UAAU,CAAC,eACxBP,OAAA,CAACZ,OAAO;MAACe,WAAW,EAAEA,WAAY;MAACyB,gBAAgB,EAAEA;IAAiB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAExEJ,UAAU,CAAC,CAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACzB,EAAA,CA1DuBD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}