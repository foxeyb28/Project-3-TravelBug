{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epine\\\\bootcamp\\\\TravelBug\\\\Project-3-TravelBug\\\\client\\\\src\\\\components\\\\Container.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NavTabs from './Navtabs';\nimport Home from './pages/Home';\nimport PlacesToGo from './pages/PlacesToGo';\nimport getLocationId from '../utils/api/LocationSearch';\nimport getRestaurants from '../utils/api/RestaurantSearch';\n\n// import Restaurants  from './pages/Restaurants ';\nimport Attractions from './pages/Attractions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Container() {\n  _s();\n  const [currentPage, setCurrentPage] = useState('Home');\n  const [locationId, setLocationId] = useState('');\n  useEffect(() => {});\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === 'Home') {\n      return /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === 'Attractions') {\n      return /*#__PURE__*/_jsxDEV(Attractions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    }\n    if (currentPage === 'PlacesToGo') {\n      return /*#__PURE__*/_jsxDEV(PlacesToGo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    }\n    // if (currentPage === 'Restaurants ') {\n    //     return <Restaurants  />;\n    // }\n  };\n\n  const handlePageChange = page => setCurrentPage(page);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(getLocationId()), /*#__PURE__*/_jsxDEV(NavTabs, {\n      currentPage: currentPage,\n      handlePageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), renderPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Container, \"SiRlTI1GkQEghxqYQ2rO9fIce2M=\");\n_c = Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","NavTabs","Home","PlacesToGo","getLocationId","getRestaurants","Attractions","jsxDEV","_jsxDEV","Container","_s","currentPage","setCurrentPage","locationId","setLocationId","renderPage","fileName","_jsxFileName","lineNumber","columnNumber","handlePageChange","page","children","console","log","_c","$RefreshReg$"],"sources":["C:/Users/epine/bootcamp/TravelBug/Project-3-TravelBug/client/src/components/Container.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NavTabs from './Navtabs';\nimport Home from './pages/Home';\nimport PlacesToGo from './pages/PlacesToGo';\nimport getLocationId from '../utils/api/LocationSearch';\nimport getRestaurants from '../utils/api/RestaurantSearch';\n\n// import Restaurants  from './pages/Restaurants ';\nimport Attractions from './pages/Attractions';\n\nexport default function Container() {\n  const [currentPage, setCurrentPage] = useState('Home');\n  const [locationId, setLocationId] = useState('')\n  useEffect(()=>{})\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    if (currentPage === 'Home') {\n      return <Home />;\n    }\n    if (currentPage === 'Attractions') {\n      return <Attractions />;\n    }\n    if (currentPage === 'PlacesToGo') {\n      return <PlacesToGo />;\n    }\n    // if (currentPage === 'Restaurants ') {\n    //     return <Restaurants  />;\n    // }\n  };\n\n  const handlePageChange = (page) => setCurrentPage(page);\n\n  return (\n    <div>\n      {console.log(getLocationId())}\n      {/* We are passing the currentPage from state and the function to update it */}\n      <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\n      {renderPage()}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,cAAc,MAAM,+BAA+B;;AAE1D;AACA,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChDC,SAAS,CAAC,MAAI,CAAC,CAAC,CAAC;EACjB;EACA,MAAMe,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIJ,WAAW,KAAK,MAAM,EAAE;MAC1B,oBAAOH,OAAA,CAACN,IAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACjB;IACA,IAAIR,WAAW,KAAK,aAAa,EAAE;MACjC,oBAAOH,OAAA,CAACF,WAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACxB;IACA,IAAIR,WAAW,KAAK,YAAY,EAAE;MAChC,oBAAOH,OAAA,CAACL,UAAU;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACvB;IACA;IACA;IACA;EACF,CAAC;;EAED,MAAMC,gBAAgB,GAAIC,IAAI,IAAKT,cAAc,CAACS,IAAI,CAAC;EAEvD,oBACEb,OAAA;IAAAc,QAAA,GACGC,OAAO,CAACC,GAAG,CAACpB,aAAa,CAAC,CAAC,CAAC,eAE7BI,OAAA,CAACP,OAAO;MAACU,WAAW,EAAEA,WAAY;MAACS,gBAAgB,EAAEA;IAAiB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACxEJ,UAAU,CAAC,CAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACT,EAAA,CA9BuBD,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}